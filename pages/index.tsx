import {
  Box,
  Input,
  Stack,
  Text,
  chakra,
  Grid,
  Container,
  Checkbox,
  Button,
} from "@chakra-ui/react";
import Head from "next/head";
import { ChangeEventHandler, useState } from "react";

export default function Home() {
  const weekdays = [
    "Lunes",
    "Martes",
    "Miércoles",
    "Jueves",
    "Viernes",
    "Sábado",
    "Domingo",
  ];

  const [hours, setHours] = useState<
    Record<string, { hours: number; feriado: boolean }>
  >({
    Lunes: { hours: 0, feriado: false },
    Martes: { hours: 0, feriado: false },
    Miércoles: { hours: 0, feriado: false },
    Jueves: { hours: 0, feriado: false },
    Viernes: { hours: 0, feriado: false },
    Sábado: { hours: 0, feriado: false },
    Domingo: { hours: 0, feriado: false },
  });

  const [salaryPerHour, setSalaryPerHour] = useState(680);

  const handleChangeSalaryPerHour: ChangeEventHandler<HTMLInputElement> = (
    e
  ) => {
    setSalaryPerHour(Number(e.target.value));
  };

  const salary = (Object.keys(hours) as (keyof typeof hours)[]).reduce(
    (acc, weekday) => {
      const { hours: dayHours, feriado } = hours[weekday];

      return acc + dayHours * salaryPerHour * (feriado ? 2 : 1);
    },
    0
  );

  const handleChangeFeriado = (index: number) => {
    const newHours = { ...hours };
    const weekday = Object.keys(hours)[index] as keyof typeof hours;
    newHours[weekday].feriado = !newHours[weekday].feriado;
    setHours(newHours);
  };

  const handleChangeHours = (index: number, value: string) => {
    const newHours = { ...hours };
    const weekday = Object.keys(hours)[index] as keyof typeof hours;
    newHours[weekday].hours = Number(value) || 0;
    setHours(newHours);
  };

  const handleAddDay = () => {
    let lastDay = Object.keys(hours).at(-1);

    if (!lastDay) {
      return;
    }

    const divider = lastDay.indexOf("-");
    const number = (Number(lastDay.slice(divider + 1)) || 0) + 1;

    if (lastDay.includes("-")) {
      lastDay = lastDay.slice(0, divider);
    }

    const newHours = { ...hours };

    let nextDay = weekdays[weekdays.indexOf(lastDay) + 1];
    nextDay = nextDay || weekdays[0];
    console.log(nextDay);
    newHours[`${nextDay}-${number}`] = { hours: 0, feriado: false };

    setHours(newHours);
  };

  return (
    <Box>
      <Head>
        <title>Calcular sueldo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container>
        <Stack spacing={8}>
          <Stack spacing={6}>
            <Stack spacing={2}>
              <chakra.label>Salario x hora</chakra.label>
              <Input
                type="number"
                value={salaryPerHour}
                onChange={handleChangeSalaryPerHour}
              />
            </Stack>

            <Stack spacing={4}>
              {Object.keys(hours).map((weekday, i) => {
                return (
                  <Grid
                    alignItems="center"
                    key={`${weekday}-${i}`}
                    gridTemplateColumns="1fr 1fr 1fr"
                    gap={4}
                  >
                    <Text>{weekday}</Text>

                    <Stack>
                      <chakra.label htmlFor={`hours-${weekday}-${i}`}>
                        Horas
                      </chakra.label>
                      <Input
                        type="number"
                        id={`hours-${weekday}-${i}`}
                        onChange={(e) => handleChangeHours(i, e.target.value)}
                        value={hours[weekday].hours}
                      />
                    </Stack>

                    <Stack alignItems="center">
                      <chakra.label htmlFor={`feriado-${weekday}-${i}`}>
                        Feriado
                      </chakra.label>
                      <Checkbox
                        id={`feriado-${weekday}-${i}`}
                        onChange={() => handleChangeFeriado(i)}
                        isChecked={hours[weekday].feriado}
                      />
                    </Stack>
                  </Grid>
                );
              })}
            </Stack>

            <Button variant="outline" size="sm" onClick={handleAddDay}>
              Agregar día
            </Button>
          </Stack>

          <Button>Calcular</Button>

          <Text fontWeight="bold" fontSize="xl">
            Sueldo: {salary}
          </Text>
        </Stack>
      </Container>
    </Box>
  );
}
